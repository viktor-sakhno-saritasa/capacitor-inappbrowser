{
  "api": {
    "name": "InAppBrowserPlugin",
    "slug": "inappbrowserplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "open",
        "signature": "(options: OpenOptions) => Promise<any>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "OpenOptions"
          }
        ],
        "returns": "Promise<any>",
        "tags": [
          {
            "name": "since",
            "text": "0.1.0"
          }
        ],
        "docs": "Open url in a new window fullscreen",
        "complexTypes": [
          "OpenOptions"
        ],
        "slug": "open"
      },
      {
        "name": "clearCookies",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [
          {
            "name": "since",
            "text": "0.5.0"
          }
        ],
        "docs": "Clear all cookies",
        "complexTypes": [],
        "slug": "clearcookies"
      },
      {
        "name": "close",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "close"
      },
      {
        "name": "openWebViewWithHTML",
        "signature": "(options: OpenWebViewOptionsWithHtmlString) => Promise<any>",
        "parameters": [
          {
            "name": "options",
            "docs": "WebView options",
            "type": "OpenWebViewOptionsWithHtmlString"
          }
        ],
        "returns": "Promise<any>",
        "tags": [
          {
            "name": "param",
            "text": "options WebView options"
          }
        ],
        "docs": "Open webview with given html string.",
        "complexTypes": [
          "OpenWebViewOptionsWithHtmlString"
        ],
        "slug": "openwebviewwithhtml"
      },
      {
        "name": "openWebView",
        "signature": "(options: OpenWebViewOptionsWithUrl) => Promise<any>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "OpenWebViewOptionsWithUrl"
          }
        ],
        "returns": "Promise<any>",
        "tags": [
          {
            "name": "since",
            "text": "0.1.0"
          }
        ],
        "docs": "Open url in a new webview with toolbars",
        "complexTypes": [
          "OpenWebViewOptionsWithUrl"
        ],
        "slug": "openwebview"
      },
      {
        "name": "setUrl",
        "signature": "(options: { url: string; }) => Promise<any>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ url: string; }"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "seturl"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"urlChangeEvent\", listenerFunc: UrlChangeListener) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'urlChangeEvent'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "UrlChangeListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.1"
          }
        ],
        "docs": "Listen for url change, only for openWebView",
        "complexTypes": [
          "PluginListenerHandle",
          "UrlChangeListener"
        ],
        "slug": "addlistenerurlchangeevent-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"closeEvent\", listenerFunc: UrlChangeListener) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'closeEvent'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "UrlChangeListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "since",
            "text": "0.4.0"
          }
        ],
        "docs": "Listen for close click only for openWebView",
        "complexTypes": [
          "PluginListenerHandle",
          "UrlChangeListener"
        ],
        "slug": "addlistenercloseevent-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"confirmBtnClicked\", listenerFunc: ConfirmBtnListener) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'confirmBtnClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "ConfirmBtnListener"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.1"
          }
        ],
        "docs": "Will be triggered when user clicks on confirm button when disclaimer is required, works only on iOS",
        "complexTypes": [
          "PluginListenerHandle",
          "ConfirmBtnListener"
        ],
        "slug": "addlistenerconfirmbtnclicked-"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Remove all listeners for this plugin.",
        "complexTypes": [],
        "slug": "removealllisteners"
      },
      {
        "name": "reload",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Reload the current web page.",
        "complexTypes": [],
        "slug": "reload"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "OpenOptions",
      "slug": "openoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            }
          ],
          "docs": "Target URL to load.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "headers",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            }
          ],
          "docs": "Headers to send with the request.",
          "complexTypes": [
            "Headers"
          ],
          "type": "Headers"
        },
        {
          "name": "isPresentAfterPageLoad",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            }
          ],
          "docs": "if true, the browser will be presented after the page is loaded, if false, the browser will be presented immediately.",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "preventDeeplink",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "Headers",
      "slug": "headers",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": []
    },
    {
      "name": "OpenWebViewBaseOptions",
      "slug": "openwebviewbaseoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "headers",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            }
          ],
          "docs": "Headers to send with the request.",
          "complexTypes": [
            "Headers"
          ],
          "type": "Headers"
        },
        {
          "name": "shareDisclaimer",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            }
          ],
          "docs": "share options",
          "complexTypes": [
            "DisclaimerOptions"
          ],
          "type": "DisclaimerOptions"
        },
        {
          "name": "toolbarType",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            },
            {
              "text": "ToolBarType.DEFAULT",
              "name": "default"
            }
          ],
          "docs": "Toolbar type",
          "complexTypes": [
            "ToolBarType"
          ],
          "type": "ToolBarType"
        },
        {
          "name": "shareSubject",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            }
          ],
          "docs": "Share subject",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "title",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            },
            {
              "text": "'New Window'",
              "name": "default"
            }
          ],
          "docs": "Title of the browser",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "backgroundColor",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            },
            {
              "text": "BackgroundColor.BLACK",
              "name": "default"
            }
          ],
          "docs": "Background color of the browser, only on IOS",
          "complexTypes": [
            "BackgroundColor"
          ],
          "type": "BackgroundColor"
        },
        {
          "name": "isPresentAfterPageLoad",
          "tags": [
            {
              "text": "0.1.0",
              "name": "since"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Open url in a new window fullscreen\n\nisPresentAfterPageLoad: if true, the browser will be presented after the page is loaded, if false, the browser will be presented immediately.",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "showReloadButton",
          "tags": [
            {
              "text": "1.0.15",
              "name": "since"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Shows a reload button that reloads the web page",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "closeModal",
          "tags": [
            {
              "text": "1.1.0",
              "name": "since"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "CloseModal: if true a confirm will be displayed when user clicks on close button, if false the browser will be closed immediately.",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "closeModalTitle",
          "tags": [
            {
              "text": "1.1.0",
              "name": "since"
            },
            {
              "text": "'Close'",
              "name": "default"
            }
          ],
          "docs": "CloseModalTitle: title of the confirm when user clicks on close button, only on IOS",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "closeModalDescription",
          "tags": [
            {
              "text": "1.1.0",
              "name": "since"
            },
            {
              "text": "'Are you sure you want to close this window?'",
              "name": "default"
            }
          ],
          "docs": "CloseModalDescription: description of the confirm when user clicks on close button, only on IOS",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "closeModalOk",
          "tags": [
            {
              "text": "1.1.0",
              "name": "since"
            },
            {
              "text": "'Close'",
              "name": "default"
            }
          ],
          "docs": "CloseModalOk: text of the confirm button when user clicks on close button, only on IOS",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "closeModalCancel",
          "tags": [
            {
              "text": "1.1.0",
              "name": "since"
            },
            {
              "text": "'Cancel'",
              "name": "default"
            }
          ],
          "docs": "CloseModalCancel: text of the cancel button when user clicks on close button, only on IOS",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "visibleTitle",
          "tags": [
            {
              "text": "1.2.5",
              "name": "since"
            },
            {
              "text": "true",
              "name": "default"
            }
          ],
          "docs": "visibleTitle: if true the website title would be shown else shown empty",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "toolbarColor",
          "tags": [
            {
              "text": "1.2.5",
              "name": "since"
            },
            {
              "text": "'#ffffff''",
              "name": "default"
            }
          ],
          "docs": "toolbarColor: color of the toolbar in hex format",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "showArrow",
          "tags": [
            {
              "text": "1.2.5",
              "name": "since"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "showArrow: if true an arrow would be shown instead of cross for closing the window",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "DisclaimerOptions",
      "slug": "disclaimeroptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "title",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "message",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "confirmBtn",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "cancelBtn",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    },
    {
      "name": "UrlEvent",
      "slug": "urlevent",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "tags": [
            {
              "text": "0.0.1",
              "name": "since"
            }
          ],
          "docs": "Emit when the url changes",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "BtnEvent",
      "slug": "btnevent",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "tags": [
            {
              "text": "0.0.1",
              "name": "since"
            }
          ],
          "docs": "Emit when a button is clicked.",
          "complexTypes": [],
          "type": "string"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "ToolBarType",
      "slug": "toolbartype",
      "members": [
        {
          "name": "ACTIVITY",
          "value": "\"activity\"",
          "tags": [],
          "docs": ""
        },
        {
          "name": "NAVIGATION",
          "value": "\"navigation\"",
          "tags": [],
          "docs": ""
        },
        {
          "name": "BLANK",
          "value": "\"blank\"",
          "tags": [],
          "docs": ""
        },
        {
          "name": "DEFAULT",
          "value": "\"\"",
          "tags": [],
          "docs": ""
        }
      ]
    },
    {
      "name": "BackgroundColor",
      "slug": "backgroundcolor",
      "members": [
        {
          "name": "WHITE",
          "value": "\"white\"",
          "tags": [],
          "docs": ""
        },
        {
          "name": "BLACK",
          "value": "\"black\"",
          "tags": [],
          "docs": ""
        }
      ]
    }
  ],
  "typeAliases": [
    {
      "name": "OpenWebViewOptionsWithHtmlString",
      "slug": "openwebviewoptionswithhtmlstring",
      "docs": "",
      "types": [
        {
          "text": "OpenWebViewBaseOptions & {\n  /**\n   * HTML string to load as an alternative to `url`.\n   */\n  htmlString: string;\n}",
          "complexTypes": [
            "OpenWebViewBaseOptions"
          ]
        }
      ]
    },
    {
      "name": "OpenWebViewOptionsWithUrl",
      "slug": "openwebviewoptionswithurl",
      "docs": "",
      "types": [
        {
          "text": "OpenWebViewBaseOptions & {\n  /**\n   * Target URL to load.\n   * @since 0.1.0\n  */\n  url: string;\n}",
          "complexTypes": [
            "OpenWebViewBaseOptions"
          ]
        }
      ]
    },
    {
      "name": "UrlChangeListener",
      "slug": "urlchangelistener",
      "docs": "",
      "types": [
        {
          "text": "(state: UrlEvent): void",
          "complexTypes": [
            "UrlEvent"
          ]
        }
      ]
    },
    {
      "name": "ConfirmBtnListener",
      "slug": "confirmbtnlistener",
      "docs": "",
      "types": [
        {
          "text": "(state: BtnEvent): void",
          "complexTypes": [
            "BtnEvent"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}